{"version":3,"sources":["Chrome.js"],"names":[],"mappings":"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","file":"../Chrome.js","sourcesContent":["export class Chrome {\n\n    constructor() {\n        this.fs = require('fs');\n        this.path = require('path');\n        this.Jimp = require('jimp');\n        this.utils = require('./utils');\n        this.interface = require('chrome-remote-interface');\n        this.launcher = require('lighthouse/chrome-launcher/chrome-launcher');\n\n        let EventEmitter = require('events');\n        this.EE = new EventEmitter();\n\n        this.init();\n    }\n\n    async init() {\n        try {\n            this.chrome = await this.launch();\n            this.protocol = await this.genProtocol();\n            await this.enable_page_and_runtime();\n            await this.enable_emulation();\n            this.EE.emit('initialised');\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    async launch(headless = true) {\n        return this.launcher.launch({\n            chromeFlags: [\n                '--window-size=1366, 768',\n                '--disable-gpu',\n                headless ? '--headless' : ''\n            ]\n        });\n    }\n\n    async genProtocol() {\n        return this.interface({ port: this.chrome.port });\n    }\n\n    async enable_page_and_runtime() {\n        const { Page, Runtime } = this.protocol;\n        this.Page = Page;\n        this.Runtime = Runtime;\n\n        await this.Page.enable();\n        await this.Runtime.enable();\n    }\n\n    async enable_emulation() {\n        const { Emulation } = this.protocol;\n        this.Emulation = Emulation;\n    }\n\n    async kill() {\n        await this.protocol.close();\n        await this.chrome.kill();\n    }\n\n    async capture_page() {\n        try {\n\n            await this.utils.rmdir(`./screenshots/${this.tag}`);\n            await this.utils.mkdir(this.path.resolve(`./screenshots/${this.tag}`));\n\n            await this.clear_cookie_banner();\n            await this.Runtime.evaluate({ expression: `document.body.style.overflow = 'hidden'` });\n\n            const RESULT = await this.Runtime.evaluate({ expression: 'document.body.scrollHeight' });\n            const DOC_LENGTH = RESULT.result.value;\n            const ITER_COUNT = Math.floor(DOC_LENGTH / 768);\n            const REMAINS = Math.floor(768 * ((DOC_LENGTH / 768) - Math.floor(ITER_COUNT)));\n            let container = [];\n\n            if (ITER_COUNT === 1) {\n                let {data} = await this.Page.captureScreenshot();\n                this.fs.writeFileSync(`${this.screenshotsDir}/result.jpg`, Buffer.from(data, 'base64'));\n            } else {\n                for (let i = 1; i <= ITER_COUNT; i++) {\n                    let {data} = await this.Page.captureScreenshot();\n                    let image = await this.Jimp.read(Buffer.from(data, 'base64'));\n                    container.push(image);\n                    await this.Runtime.evaluate({ expression: `window.scroll(0, ${768 * i})` });\n                }\n\n                await this.Emulation.setVisibleSize({ width: 1366, height: REMAINS });\n                await this.Emulation.forceViewport({ x: 0, y: (DOC_LENGTH - REMAINS), scale: 1 });\n\n                let {data} = await this.Page.captureScreenshot();\n                let image = await this.Jimp.read(Buffer.from(data, 'base64'));\n                container.push(image);\n            }\n\n        } catch (err) {\n\n            console.error(err);\n\n        } finally {\n\n            if (ITER_COUNT !== 1) {\n\n                this.stitch_page(ITER_COUNT, container);\n            }\n\n            await this.kill();\n            \n        }\n    }\n\n    async clear_cookie_banner() {\n        await this.Runtime.evaluate({ expression: `\n            let el = document.getElementById(\"cookieBanner\");\n            el.parentNode.removeChild(el);\n        ` })\n    }\n\n    async stitch_page(count, container) {\n        let blitted = [];\n        if (container.length % 2 === 0) {\n            var spare_item = container.pop();\n        }\n        do {\n            await this.stitcher(container[0], container[1], blitted);\n\n            container.splice(0, 1);\n            container.splice(0, 1);\n\n            if (container.length === 1) {\n                let temp_image = blitted[blitted.length - 1];\n                blitted.splice(blitted.length - 1, 1);\n                await this.stitcher(temp_image, container[0], blitted);\n                container.splice(0, 1);\n                container = blitted;\n                blitted = [];\n            } else if (container.length < 1) {\n                container = blitted;\n                blitted = [];\n            }\n\n        } while (container.length != 1)\n        container[0].quality(30).write(`./${this.screenshotsDir}/result.jpg`);\n    }\n\n    async stitcher(image1, image2, result_arr) {\n        let current_height = image1.bitmap.height;\n        image1\n            .contain(\n                image1.bitmap.width,\n                (image1.bitmap.height + image2.bitmap.height),\n                this.Jimp.VERTICAL_ALIGN_TOP\n            )\n            .blit(\n                image2,\n                0,\n                current_height,\n                function (err, image) {\n                    image\n                    result_arr.push(image);\n                }\n            );\n        \n    }\n\n\n}"]}